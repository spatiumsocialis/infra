version: '3.4'
services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.2
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    expose: 
      - 9092
    environment:
      KAFKA_CREATE_TOPICS: "interaction_added:1:1, user_modified:1:1, daily_points_added:1:1, interaction_scored:1:1"
      KAFKA_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: /kafka/logs
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock S
    depends_on:
      - zookeeper
    extra_hosts:
      - "dockerhost:$DOCKERHOST"
  circle-app:
    build: 
      context: .
      args: 
        SERVICE: circle
        EXECUTABLE: app
    environment: 
      KAFKA_PEERS: kafka:9092
      GOOGLE_APPLICATION_CREDENTIALS: /run/secrets/google_application_credentials
    expose:
      - $PORT
    secrets:
      - google_application_credentials
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.circle_app.rule=PathPrefix(`/circle`)"
      - "traefik.http.routers.circle_app.entrypoints=web"
  proximity-app:
    build: 
      context: .
      args: 
        SERVICE: proximity
        EXECUTABLE: app
    environment: 
      KAFKA_PEERS: kafka:9092
      GOOGLE_APPLICATION_CREDENTIALS: /run/secrets/google_application_credentials
    expose:
      - $PORT
    secrets:
      - google_application_credentials
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.proximity_app.rule=PathPrefix(`/proximity`)"
      - "traefik.http.routers.proximity_app.entrypoints=web"
  scoring-app:
    build:
      context: .
      args: 
        SERVICE: scoring
        EXECUTABLE: app
    environment: 
      KAFKA_PEERS: kafka:9092
      GOOGLE_APPLICATION_CREDENTIALS: /run/secrets/google_application_credentials
    expose:
      - $PORT
    secrets:
      - google_application_credentials
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.scoring_app.rule=PathPrefix(`/scores`)"
      - "traefik.http.routers.scoring_app.entrypoints=web"
  scoring-consumer:
    build: 
      context: .
      args: 
        SERVICE: scoring
        EXECUTABLE: consumer
    environment: 
      KAFKA_PEERS: kafka:9092
      KAFKA_CGROUP: scoring
    depends_on: 
      - kafka
  location-app:
    build:
      context: .
      args:
        SERVICE: location
        EXECUTABLE: app
    environment: 
      GOOGLE_APPLICATION_CREDENTIALS: /run/secrets/google_application_credentials
    expose:
      - $PORT
    secrets:
      - google_application_credentials
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.location-app.rule=PathPrefix(`/location`)"
      - "traefik.http.routers.location-app.entrypoints=web"
  start_dependencies:
      image: dadarek/wait-for-dependencies
      depends_on:
        - kafka
      command: kafka:9092
secrets:
  google_application_credentials:
    file: $GOOGLE_APPLICATION_CREDENTIALS
